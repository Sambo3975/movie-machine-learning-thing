setwd("C:\Users\sambo\Documents\GitHub\movie-machine-learning-thing")
setwd("C:/Users/sambo/Documents/GitHub/movie-machine-learning-thing")
data <- read.csv("new_imdb.csv")
View(data)
install.packages(textshape)
install.packages('textshape')
library(textshape)
data <- read.csv("new_imdb.csv" )
column_to_rownames(data, 'movie_title')
print(data)
data <- column_to_rownames(data, 'movie_title')
print(data)
data <- data[1,-1]
print(data[1])
data <- read.csv("new_imdb.csv" )
data <- column_to_rownames(data, 'movie_title')
data <- read.csv("new_imdb.csv" )
data <- read.csv("new_imdb.csv" )
data[movie_title] <- data[movie_title, -(length(data[movie_title]))]
data['movie_title'] <- data['movie_title', -(length(data['movie_title']))]
data <- read.csv("new_imdb.csv" )
data['movie_title'] <- data['movie_title', -(length(data['movie_title']))]
data <- read.csv("new_imdb.csv" )
data['movie_title'] <- data['movie_title'][-(length(data['movie_title']))]
data <- column_to_rownames(data, 'movie_title')
data <- read.csv("new_imdb.csv" )
data['movie_title'] <- data['movie_title'][-(length(data['movie_title']))]
print(data)
data[,8]
data <- read.csv("new_imdb.csv" )
data <- read.csv("new_imdb.csv")
data[,8]
for (i in length(data))
data[i,8] = substr(data[i,8], 1, length(data[i,8]))
print(data)
data <- read.csv("new_imdb.csv")
for (i in length(data))
data[i][8] = substr(data[i][8], 1, length(data[i][8]))
print(data)
data <- read.csv("new_imdb.csv")
for (i in length(data))
print(data[i][8])
data <- read.csv("new_imdb.csv")
for (i in length(data))
print(data[8][i])
data <- read.csv("new_imdb.csv")
for (i in length(data))
print(data[i])
data <- read.csv("new_imdb.csv")
for (i in length(data))
print(data[1][i])
data <- read.csv("new_imdb.csv")
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
print(data)
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
print(data)
data <- scale(data)
View(data)
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
data <- data[ , select=-c("movie_imdb_link")]
data <- subset(data, select=-c("movie_imdb_link"))
data <- subset(data, select=-c(movie_imdb_link))
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country))
data <- scale(data)
distance <- dist(as.matrix(data))
hc <- hclust(distance)
plot(hc)
data <- data[order(-imdb_score)]
data <- data[order(-'imdb_score')]
data <- data[order(-'imdb_score'),]
data <- data[order(-imdb_score),]
imdb_score <- "imdb_score"
data <- data[order(-imdb_score),]
data <- data[order(-16),]
distance <- dist(as.matrix(data))
hc <- hclust(distance)
plot(hc)
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country))
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country))
data <- scale(data)
data <- data[order(data$imdb_score),]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country))
data <- scale(data)
data <- data[order(data$imdb_score),]
data %>% arrange(desc(imdb_score))
install.packages(tidyverse)
install.packages('tidyverse')
library(tidyverse)
data %>% arrange(desc(imdb_score))
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country))
data <- scale(data)
data[
with(dataframe, order(imdb_score))
]
data[
with(data, order(imdb_score))
]
data[
with(data, order(imdb_score)),
]
data[
order(data[,16]),
]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, x))
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data[
order(data[,16]),
]
data <- column_to_rownames(data, 'movie_title')
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data[
order(data[,15]),
]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data[
order(data[,"imdb_score"]),
]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,-"imdb_score"]),
]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,-imdb_score]),
]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,"imdb_score"]),
]
data <- data[order(ncol(data):1)]
data <- data[1:50]
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,"imdb_score"]),
]
data <- data[order(ncol(data):1)]
data <- data[,1:50]
data <- head(data, 50)
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,"imdb_score"]),
]
data <- data[order(ncol(data):1)]
data <- head(data, 50)
distance <- dist(as.matrix(data))
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,"imdb_score"]),
]
data <- data[order(ncol(data):1)]
data <- read.csv("new_imdb.csv")
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- scale(data)
data <- data[
order(data[,"imdb_score"]),
]
data <- tail(data, 50)
data <- read.csv("new_imdb.csv")
data <- column_to_rownames(data, 'movie_title')
# URLs will not be useful
# Language and Country are also removed for consistency with the other group members
data <- subset(data, select=-c(movie_imdb_link, language, country, 1))
data <- data[
order(data[,"imdb_score"]),
]
data <- tail(data, 50)
data <- scale(data)
distance <- dist(as.matrix(data))
hc <- hclust(distance)
plot(hc)
